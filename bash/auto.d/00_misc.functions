#!/bin/bash

# Contains several random functions that either need to be categorized or don't fit in normal categories

#A shell function using perl to easily convert Unix-time to text.
utime(){ perl -e "print localtime($1).\"\n\"";}

#this shows the top 10 processes using up the most cpu
topproc10(){ ps -eo pcpu,pmem,user,pid,cmd | sort -r | head -10; }
#this one shows the top 10 users's using up cpu and mem, along with how many processes they're running
topproc10u() { ps -eo user,pcpu,pmem | tail -n +2 | awk '{num[$1]++; cpu[$1] += $2; mem[$1] += $3} END{printf("NPROC\tUSER\tCPU\tMEM\n"); for (user in cpu) printf("%d\t%s\t%.2f\t%.2f\n",num[user], user, cpu[user], mem[user]) }'; }

# Calculator!
calc(){ awk "BEGIN{ print $* }" ;}

#check to see the dates on a ssl cert
function check_ssl_date() {
        echo | openssl s_client -connect "${1}":443 2>/dev/null |openssl x509 -dates -noout
}

#pipe the output of a command to sprunge and it will give you a link to a paste-bin type page
#add ?php or ?sh or etc to have it add line numbers and highlighting
alias sprunge="curl -F 'sprunge=<-' http://sprunge.us"

#automatically resume scp transfers that failed or paused
alias scpresume='rsync --partial --progress --rsh=ssh'
#makes a directory tree listing
alias dirtree='find . -type d | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/|-\1/"'
#Strips bash and php comments from a file
alias stripcomments="sed -e '/^[[:blank:]]*#/d; s/[[:blank:]][[:blank:]]*#.*//'  -e '/^$/d' -e '/^\/\/.*/d' -e '/^\/\*/d;/^ \* /d;/^ \*\//d'"

dh() { du -ch --max-depth=1 "${@-.}"|sort -h; }

function sysinfo() {
        echo  "Total Processes: `ps aux | wc -l`";
        echo -e "\thttpd:\t\t`ps aux | grep http | wc -l`";
        echo -e "\tmysqld:\t\t`ps aux | grep mysql | wc -l`";
        echo "Netstat connections: "
        echo -e "\thttp(s):\t`netstat -tulena | egrep -c ':80|:443'`";
        echo -e "\tftp:\t\t`netstat -tulena | grep -c ':21'`";
        echo -e "\tssh:\t\t`netstat -tulena | grep -c ':22'`";
        echo -e "\tEstablished:\t`netstat -an | grep -Ec '^tcp.+ESTABLISHED$'`";
        echo -e "\tListening:\t`netstat -an | grep -Ec '^tcp.*LISTEN'`";
}

# function to update the X DISPLAY variable .  Good for when you re-attach a screen or tmux session from another computer
# from http://brainscraps.wikidot.com/tmux
update_display() {
  good_display=$(netstat -an | /bin/grep 0\ [0-9,:,.]*:60..\  | awk '{print $4}' | tail -n 1)
  good_display=${good_display: -2}
  export DISPLAY=${HOSTNAME}:${good_display}.0
}

# used to refresh ssh connection for tmux
# http://justinchouinard.com/blog/2010/04/10/fix-stale-ssh-environment-variables-in-gnu-screen-and-tmux/
# http://readystate4.com/category/tmux/
function r() {
  if [[ -n $TMUX ]]; then
    NEW_SSH_AUTH_SOCK=`tmux showenv|grep ^SSH_AUTH_SOCK|cut -d = -f 2`
    if [[ -n $NEW_SSH_AUTH_SOCK ]] && [[ -S $NEW_SSH_AUTH_SOCK ]]; then
      SSH_AUTH_SOCK=$NEW_SSH_AUTH_SOCK
    fi
  fi
}

